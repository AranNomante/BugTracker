@model BugTracker.Models.Bug

@{
    ViewBag.Title = "Create";
}

<!--Create değişecek-->
@if (ViewBag.msg.Equals("user"))
{

    using (Html.BeginForm("Create", "Bugs", FormMethod.Post, new { enctype = "multipart/form-data",name="create" }))
    {




        <input type="hidden" name="prevPage" value="@ViewBag.urlPrev" />
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control",maxlength=255, name="title"} })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.severity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Trivial @Html.RadioButtonFor(model => model.severity, "Trivial", new { Checked = "checked" })
                    Minor @Html.RadioButtonFor(model => model.severity, "Minor")
                    Major @Html.RadioButtonFor(model => model.severity, "Major")
                    Critical @Html.RadioButtonFor(model => model.severity, "Critical")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.version, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control",maxlength=45, name="version"  } })
                    @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">            
                    @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control", maxlength=4000,name="description" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Screenshot", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="postedFile" multiple"/>
                    <br />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }
}